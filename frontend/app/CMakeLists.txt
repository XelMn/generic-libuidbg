PROJECT(app LANGUAGES CXX)

SET(CMAKE_AUTOUIC ON)
SET(CMAKE_AUTOMOC ON)

FIND_PACKAGE(QT NAMES Qt6 Qt5 REQUIRED COMPONENTS Core Gui Widgets )
FIND_PACKAGE(Qt${QT_VERSION_MAJOR} REQUIRED COMPONENTS Core Gui Widgets )

SET(SOURCE_LIST 
    widgets/vxwidget.h widgets/vxwidget.cpp widgets/vxwidget.ui
    main.cpp
)

SOURCE_GROUP(TREE ${CMAKE_CURRENT_SOURCE_DIR} PREFIX src FILES ${SOURCE_LIST})

ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCE_LIST})

IF (WIN32)
    SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES WIN32_EXECUTABLE true)
ENDIF()

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES DEBUG_POSTFIX "d")

TARGET_LINK_LIBRARIES(${PROJECT_NAME} PRIVATE
    Qt${QT_VERSION_MAJOR}::Core
    Qt${QT_VERSION_MAJOR}::Gui
    Qt${QT_VERSION_MAJOR}::Widgets
)

TARGET_PRECOMPILE_HEADERS(${PROJECT_NAME} PRIVATE stdafx.h)

FIND_PROGRAM(RCC NAMES rcc)
IF (RCC)
    ADD_CUSTOM_COMMAND(
        TARGET ${PROJECT_NAME} POST_BUILD
        COMMAND ${CMAKE_COMMAND} -E make_directory $<TARGET_FILE_DIR:${PROJECT_NAME}>/resource
        COMMAND ${RCC} --binary --compress 1 -o $<TARGET_FILE_DIR:${PROJECT_NAME}>/resource/${PROJECT_NAME}.rcc ${CMAKE_CURRENT_SOURCE_DIR}/resource/${PROJECT_NAME}.qrc
        COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_SOURCE_DIR}/qt.conf $<TARGET_FILE_DIR:${PROJECT_NAME}>/qt.conf
        VERBATIM
    )
ENDIF()

X_ADDTASK_DEPLOYQT(TARGET ${PROJECT_NAME})